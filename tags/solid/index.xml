<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SOLID on Syed Zainulabideen</title>
    <link>https://syedzainulabideen.github.io/tags/solid/</link>
    <description>Recent content in SOLID on Syed Zainulabideen</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 16 Aug 2023 09:36:00 +0500</lastBuildDate><atom:link href="https://syedzainulabideen.github.io/tags/solid/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SOLID - Open Close Principle (OCP)</title>
      <link>https://syedzainulabideen.github.io/posts/solid-open-close/</link>
      <pubDate>Wed, 16 Aug 2023 09:36:00 +0500</pubDate>
      
      <guid>https://syedzainulabideen.github.io/posts/solid-open-close/</guid>
      <description>OCP states that software entities (such as classes, modules, functions, etc.) should be open for extension but closed for modification. In simple words it means that once a entity is created and working as intended, its internal code should not be modified to add new features or behaviors.
So how can then we add features or update the functionalities? And the answer is by extending the existing entities with by Subclassing, Extensions or Protocols/Interfaces etc.</description>
    </item>
    
    <item>
      <title>SOLID - Single Responsibility Principle (SRP)</title>
      <link>https://syedzainulabideen.github.io/posts/solid-single-responsibility/</link>
      <pubDate>Tue, 15 Aug 2023 10:20:00 +0500</pubDate>
      
      <guid>https://syedzainulabideen.github.io/posts/solid-single-responsibility/</guid>
      <description>SRP states that a class should have only one reason to change or only one responsibility. In other words, a class should have a single, well-defined purpose.
Let&amp;rsquo;s understand this concept with a quick example. Suppose we have a User class and also there are two functioanlities accociated with this class i.e. saveToDatabase and sendWelcomeEmail.
Now condier the below code snippet that&amp;rsquo;s without the usage of SRP principle. We embedded the two functionality right into the User class.</description>
    </item>
    
  </channel>
</rss>
